#!/usr/bin/env bash
set -euo pipefail
BASEDIR="$(realpath "$(dirname "$0")")"
PARENTDIR="$(dirname "$BASEDIR")"

usage() {
	echo "./play vm (delete | create | start | stop) <hostname>..."
	echo "./play vm (delete | create | start | stop) --all"
	echo "./play image build <hostname> <destdir>"
	echo "./play vaal ..."
	exit 1
}

validate_host() {
	[ -z "$1" ] && usage

	if ! play_vaal list hosts | grep -q "^$1$"; then
		echo >&2 "ERROR: Could not find hostname '$1' in config."
		echo >&2 "       Config files:"
		echo >&2 "         ${PARENTDIR}/config.yaml"
		echo >&2 "         ${PARENTDIR}/config.secrets.yaml"
		echo >&2 "         ${BASEDIR}/config.yaml"
		exit 2
	fi
}

run_vm_script() {
	local -r script="$1"

	local -a hostnames=("${@:2}")
	if [[ "$2" == '--all' ]]; then
		readarray -t hostnames <<<"$(play_vaal list hosts | sort --reverse)"
	fi

	for host in "${hostnames[@]}"; do
		validate_host "$host"
	done

	for host in "${hostnames[@]}"; do
		"$script" "$host"
	done
}

play_vaal() {
	vaal \
		--config "${PARENTDIR}/config.yaml" \
		--config "${PARENTDIR}/config.secrets.yaml" \
		--config "${BASEDIR}/config.yaml" \
		"$@"
}

play_vm() {
	local -r command="$1"

	case "$command" in
	delete | create | start | stop)
		run_vm_script "${BASEDIR}/scripts/vm-${command}" "${@:2}"
		;;

	*)
		usage
		;;
	esac
}

play_image() {
	local -r command="$1"

	case "$command" in
	build)
		local -r host="$2"
		validate_host "$host"

		local -r destdir="$3"
		[ -z "$destdir" ] && usage

		"${BASEDIR}/scripts/image-build" "$host" "$destdir"
		;;

	*)
		usage
		;;
	esac
}

case "$1" in
vaal)
	play_vaal "${@:2}"
	;;

vm)
	play_vm "${@:2}"
	;;

image)
	play_image "${@:2}"
	;;

*)
	usage
	;;
esac
