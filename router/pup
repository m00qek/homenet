#!/usr/bin/env bash
shopt -s globstar
server="$(jq '.server.user' -r secrets.json)@$(jq '.server.address' -r secrets.json)"

function bundle() {
	local config_path="$1"

	local tmp="$(mktemp -d)"

	bundle_file="${tmp}/$(basename "$config_path").bundle"

	if [ -f "$config_path" ]; then
		cp "${config_path}" "$bundle_file"
	elif [ -d "$config_path" ]; then
		touch "$bundle_file"

		for f in $(find "$config_path" -type f | sort --numeric-sort); do
			{
				echo
				echo "#==============================================================================="
				echo "#         Generated from ${config_path}/$(basename "$f")"
				echo "#==============================================================================="
				echo
			} >>"$bundle_file"

			cat "$f" >>"$bundle_file"
		done
	fi

	for r in $(jq '.replace | to_entries[]' -c <secrets.json); do
		replaceEscaped=$(sed 's/[&/\]/\\&/g' <<<"$(jq .value -r <<<"$r")")
		sed -i "s/{{$(jq .key -r <<<"$r")}}/$replaceEscaped/g" "$bundle_file"
	done

	echo "$bundle_file"
}

case "$1" in

sync)
	declare -a paths
	paths="${@:2}"

	./pup copy $paths

	for file_path in $paths; do
		services="$(jq '.services | .[ $service ] // [ $service ] | .[]' \
			--arg service "$(basename "$file_path")" \
			--raw-output \
			<config.json)"

		for service in $services; do
			ssh "$server" "/etc/init.d/${service} restart"
		done
	done
	;;

shell)
	ssh "$server"
	;;

copy)
	declare -a paths
	paths="${@:2}"

	dry_run=false
	if [[ "$2" == "--dry-run" ]]; then
		paths=${@:3}
		dry_run=true
	fi

	for config_path in $paths; do
		bundle_file="$(bundle "$config_path")"

		if $dry_run; then
			echo scp -O "$bundle_file" "${server}:/${config_path}"
			cat "$bundle_file"
			echo
		else
			scp -O "$bundle_file" "${server}:/${config_path}"
			trap "rm -rf $bundle_file" EXIT
		fi
	done
	;;

run)
	ssh "$server" "${@:2}"
	;;
esac
