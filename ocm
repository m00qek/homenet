#!/usr/bin/env bash
set -euo pipefail
shopt -s globstar

SERVER="$(jq '.router.server.user' -r secrets.json)@$(jq '.router.server.address' -r secrets.json)"
TMP_DIR="$(mktemp -d)"
DRY_RUN=false

with-dry-run() {
	if $DRY_RUN; then
		echo ${@:1}
	else
		${@:1}
	fi
}

function bundle() {
	local config_path="$1"
	bundle_file="${TMP_DIR}/$(basename "$config_path").bundle"

	if [ -f "$config_path" ]; then
		cp "${config_path}" "$bundle_file"
	elif [ -d "$config_path" ]; then
		touch "$bundle_file"

		for f in $(find "$config_path" -type f | sort --numeric-sort); do
			{
				echo
				echo "#==============================================================================="
				echo "#         Generated from ${config_path}/$(basename "$f")"
				echo "#==============================================================================="
				echo
			} >>"$bundle_file"

			cat "$f" >>"$bundle_file"
		done
	fi

	for r in $(jq '.router.replace | to_entries[]' -c <secrets.json); do
		replaceEscaped=$(sed 's/[&/\]/\\&/g' <<<"$(jq .value -r <<<"$r")")
		sed -i "s/{{$(jq .key -r <<<"$r")}}/$replaceEscaped/g" "$bundle_file"
	done

	echo "$bundle_file"
}

function config-to-services() {
	local configs=${@:1}

	for c in $configs; do
		raw_services=$(jq '.services | .[ $service ] // [ $service ] | .[]' \
			--arg service "$(basename "$c")" \
			--raw-output \
			<config.json)

		for s in $raw_services; do
			echo "$s"
		done
	done
}

function order-configs() {
	local configs=${@:1}

	deps=$(jq '.dependencies | to_entries[] | .key as $k | .value[] | . + " " + $k' \
		--raw-output \
		<config.json)

	for s in etc/config/*; do
		s=$(basename "$s")
		deps+=$(echo -e "\n$s $s")
	done

	for s in $(tsort <<<"$deps"); do
		for cs in $configs; do
			if [[ "$s" == "$(basename "$cs")" ]]; then
				echo "$cs"
			fi
		done
	done
}

args=(${@:1})
if [[ "${args[0]}" == "--dry-run" ]]; then
	DRY_RUN=true
	args=(${@:2})
fi

case "${args[0]}" in
sync)
	paths="${args[@]:1}"

	if $DRY_RUN; then
		./ocm --dry-run copy $paths
	else
		./ocm copy $paths
	fi

	services=$(config-to-services $(order-configs "$paths"))
	for service in $services; do
		command="/etc/init.d/${service} restart"
		echo "Running '${command}' ..."
		with-dry-run ssh "$SERVER" "$command"
	done
	;;

shell)
	with-dry-run ssh "$SERVER"
	;;

copy)
	paths="${args[@]:1}"

	for config_path in $paths; do
		bundle_file="$(bundle "$config_path")"
		with-dry-run scp -O "$bundle_file" "${SERVER}:/${config_path#*/}"
	done
	;;

show)
	paths="${args[@]:1}"

	for config_path in $paths; do
		cat "$(bundle "$config_path")"
	done
	;;

run)
	with-dry-run ssh "$SERVER" "${args[@]:1}"
	;;
*)
	cat <<EOF
OpenWRT configuration manager.

Usage:
  ./ocm [--dry-run] ( show | copy | sync ) <file>...
  ./ocm run <command>
  ./ocm shell
EOF
	;;
esac

if ! $DRY_RUN; then
	trap 'rm -rf $TMP_DIR' EXIT
fi
